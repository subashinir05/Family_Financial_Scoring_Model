# -*- coding: utf-8 -*-
"""Untitled1.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1ZtDpdi_xhk-xI6_n7vX5AO2_6RFcWlYp

**1. Data Analysis**
"""

import pandas as pd
import numpy as np
import seaborn as sns
import matplotlib.pyplot as plt

data = pd.read_csv('/content/drive/MyDrive/Colab Notebooks/family_financial_and_transactions_data.csv')

data.head(2)

print(data.columns)

"""Family-level"""

family_data = data.groupby('Family ID').agg({
    'Income': 'sum',
    'Savings': 'sum',
    'Monthly Expenses': 'sum',
    'Loan Payments': 'sum',
    'Credit Card Spending': 'sum',
    'Financial Goals Met (%)': 'mean'
}).reset_index()

print(family_data.head())

"""Member-level"""

member_data = data.groupby('Member ID').agg({
    'Income': 'mean',
    'Monthly Expenses': 'sum',
    'Credit Card Spending': 'sum'
}).reset_index()

print(member_data.head())

"""Understand correlations between financial metrics"""

corr_mat = family_data[['Income', 'Savings', 'Monthly Expenses', 'Loan Payments']].corr()
sns.heatmap(corr_mat, annot=True, cmap='coolwarm')
plt.title('Correlation Between Financial Metrics')
plt.show()

"""**Build a Financial Scoring Model**"""

def calculate_financial_score(row):
    savings_weight = 0.3
    expenses_weight = 0.2
    loans_weight = 0.2
    credit_weight = 0.15
    goals_weight = 0.15
    savings_ratio = row['Savings'] / row['Income'] if row['Income'] > 0 else 0
    expenses_ratio = row['Monthly Expenses'] / row['Income'] if row['Income'] > 0 else 0
    loans_ratio = row['Loan Payments'] / row['Income'] if row['Income'] > 0 else 0
    credit_spending = row['Credit Card Spending'] / row['Income'] if row['Income'] > 0 else 0
    goals_met = row['Financial Goals Met (%)'] / 100
    score = (
        (savings_weight * min(1, savings_ratio)) -
        (expenses_weight * min(1, expenses_ratio)) -
        (loans_weight * min(1, loans_ratio)) -
        (credit_weight * min(1, credit_spending)) +
        (goals_weight * goals_met)
    ) * 100

    return max(0, min(100, score))
family_data['Financial Score'] = family_data.apply(calculate_financial_score, axis=1)

print(family_data.head())

"""**3. Insights Visualization**"""

#Spending distribution across categories

category_spending = data.groupby('Category')['Amount'].sum().reset_index()
plt.figure(figsize=(8, 6))
plt.pie(category_spending['Amount'], labels=category_spending['Category'], autopct='%1.1f%%', startangle=140)
plt.title('Spending Distribution by Category')
plt.show()

#Family-wise financial scores

plt.figure(figsize=(10, 6))
plt.bar(family_data['Family ID'], family_data['Financial Score'], color='skyblue')
plt.xlabel('Family ID')
plt.ylabel('Financial Score')
plt.title('Family-wise Financial Scores')
plt.xticks(ticks=family_data['Family ID'], labels=family_data['Family ID'], rotation=45)
plt.tight_layout()
plt.show()

#Member-wise spending trends

plt.figure(figsize=(10, 6))
scatter = plt.scatter(member_data['Member ID'], member_data['Monthly Expenses'],
                      s=member_data['Credit Card Spending'], c=member_data['Income'], cmap='viridis', alpha=0.7)
plt.colorbar(scatter, label='Income')
plt.xlabel('Member ID')
plt.ylabel('Monthly Expenses')
plt.title('Member-wise Spending Trends')
plt.grid(alpha=0.3)
plt.tight_layout()
plt.show()

# Correlation between Income and Monthly Expenses

plt.figure(figsize=(10, 6))
plt.scatter(
    family_data['Income'],
    family_data['Monthly Expenses'],
    color='teal',
    alpha=0.7,
    edgecolors='k'
)
plt.xlabel('Income', fontsize=12)
plt.ylabel('Monthly Expenses', fontsize=12)
plt.title('Correlation Between Income and Monthly Expenses', fontsize=14)
plt.grid(alpha=0.3)
plt.tight_layout()
plt.show()